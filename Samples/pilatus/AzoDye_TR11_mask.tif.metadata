[metadata]
width=1475
height=1679
qxrdVersion=Unknown
qtVersion=Unknown
dataType=0
dataTypeName=Undefined
fileBase=
fileName=/home/jennings/development/qxrd-git/qxrd/Samples/pilatus/AzoDye_TR11_mask.tif
title=
readoutMode=0
exposureTime=0
summedExposures=0
imageNumber=0
phaseNumber=-1
nPhases=-1
dateTime=@Variant(\0\0\0\x10\0%{/\x4\x93\xd1\x8f\x1)
dateString=2013.03.15 : 21:19:56.303
hBinning=1
vBinning=1
cameraGain=0
triggered=0
userComment1=
userComment2=
userComment3=
userComment4=
imageSaved=1
normalization=@Variant(\0\0\0\x7f\0\0\0\xfQcepDoubleList\0\0\0\0\0)
normalization\size=0
extraInputs=@Variant(\0\0\0\x7f\0\0\0\xfQcepDoubleList\0\0\0\0\0)
extraInputs\size=0
used=true

[normalization]
size=0

[centerfinder]
centerX=1014.21137761725
centerY=1033.92341219873
centerStep=1
detectorXPixelSize=200
detectorYPixelSize=200
detectorDistance=1000
energy=20000
implementTilt=false
detectorTilt=0
tiltPlaneRotation=90
enableGeometricCorrections=false
enablePolarizationCorrections=false
polarization=1
enableAbsorptionCorrections=false
attenuationLength=0
markedPoints="@Variant(\0\0\0\x7f\0\0\0\fQcepPolygon\0\0\0\0\x10@\x8a\xd4\xbe\x65\xa2\xad\xb3@\x80\0\xdd\x82\x65\x66R@\x85J\xa1#\xfa\xf5\xb5@\x82\xd2\xa2\x43\xae\xd5\xd5@\x80\xeb\xdau\x84\x45\xcc@\x87\xe0:\x9bG\x10\x93@}n\fR\xd8\x4\x83@\x8f>\xe9\xd0\xf8\x5\xd5@\x80\x2\xb7\x84#\xd1\x39@\x93w\xa1\x1d\xf5\xfa\n@\x83\xf9\xaeZ-\x5\xe1@\x96U\x7f\xcb\xcf^\xf9@\x8aS\xf7\x90L6\xe5@\x98:\xb7\x10\x9a\x18\x3@\x8f\xd9\xe5>t\xb8\xbc@\x98\xab\xad\x9f\xea\x33M@\x92\\\xfe\x37:\x11\xbe@\x98G\xefhKWi@\x94\xe1\x1a\xd6oU\xc9@\x97\x3\xd1~BE\x1f@\x96\xd5'\xa9)CD@\x95\x5\x8d\xcbU\xd6l@\x98\x14\x41\xa9\xf0\x91?@\x92O4\xa0\x98\xbd\x43@\x98J\xfa\x13\x10\x95\xc9@\x8e\x34\x61\xdd\x32\x63\xaf@\x97gB\"o\xe1\xf6@\x88\x80\x85\x83\x8c\x5\xbc@\x95\x86\xd3\x44\xb3r%@\x83\x9e;t\xf6\x8dv@\x92\xd3\xbf\xfc\xbe\xda\xbd@\x80]$\xf\xb7\xa5\x33)"
markedPoints\size=16
markedPoints\1\x=858.592967291761
markedPoints\1\y=512.108158867059
markedPoints\2\x=681.328681908248
markedPoints\2\y=602.329230657483
markedPoints\3\x=541.481669457798
markedPoints\3\y=764.028616481012
markedPoints\4\x=470.878008693522
markedPoints\4\y=999.864168107679
markedPoints\5\x=512.339607505629
markedPoints\5\y=1245.90734085406
markedPoints\6\x=639.210132934324
markedPoints\6\y=1429.37480091111
markedPoints\7\x=842.495880694795
markedPoints\7\y=1550.67877426883
markedPoints\8\x=1019.23693553151
markedPoints\8\y=1578.91955533922
markedPoints\9\x=1175.24825754865
markedPoints\9\y=1553.98379628869
markedPoints\10\x=1336.27620862924
markedPoints\10\y=1472.95458320186
markedPoints\11\x=1461.2887312362
markedPoints\11\y=1345.38847097512
markedPoints\12\x=1541.06412483107
markedPoints\12\y=1171.80139387756
markedPoints\13\x=1554.74421335139
markedPoints\13\y=966.547785180728
markedPoints\14\x=1497.81458449189
markedPoints\14\y=784.065192312169
markedPoints\15\x=1377.70631676087
markedPoints\15\y=627.779031683151
markedPoints\16\x=1204.93748758516
markedPoints\16\y=523.642608103494
ringRadius=544.682922950416
adjustMarkedPoints=true
adjustmentRadius=3
enableUserGeometry=0
userGeometryScript="/*\n  This file gives an example user geometry function.\n\n  The value of 'centering.enableUserGeometry' determines hoe the geometry\n  function will be called:\n\n  0:  No user geometry function\n  1:  Called with detector pixel coordinates as arguments\n\n  The function should return a radial distance value which represents\n  the bin number that the pixel should map into,  If you want a pixel to\n  be ignored you can return a negative value.\n  */\n\nfunction userGeometry(i, j) {\n  /* this example implements an untilted detector, with hte\n    beam center at (1234,2076)\n    */\n\n  return Math.sqrt(Math.pow(i-1234,2) + Math.pow(j-2076,2));\n}\n"
userGeometryFunction=userGeometry
enableUserAbsorption=0
userAbsorptionScript="/*\n  This file contains some example user absorption functions.\n\n  The value of 'centering.enableUserAbsorption' determines how the absorption\n  function will be called:\n\n  0:   No user defined absorption\n  1:   Called with detector pixel coordinate as arguments (ignores tilt correction)\n  2:   Called with x,y displacement from beam center at detector plane (uses tilt correction)\n  3:   Called with r,chi as arguments (uses tilt correction)\n  4:   Called with q,chi as arguments (uses tilt correction)\n\n  The value returned by the function will be used to multiply the image intensity\n\n\n  */\n\nfunction userAbsorb1(i,j) {\n  /* As a function of pixel coordinates */\n  /* this example implements a 500 pixel radius circle, centered at (1234,2076) */\n\n  var rad = Math.sqrt(Math.pow(i-1234,2) + Math.pow(j-2076,2));\n\n  if (rad > 500) {\n    return 0;\n  } else {\n    return 1;\n  }\n}\n\nfunction userAbsorb2(x,y) {\n  /* As a function of x,y displacement from detector center */\n  /* this example implements a 50mm radius circle */\n\n  var rad = Math.sqrt(Math.pow(x,2) + Math.pow(y,2));\n\n  if (rad > 50) {\n    return 0;\n  } else {\n    return 1;\n  }\n}\n\nfunction userAbsorb3(r,chi) {\n  /* as a function of r,chi - again a 50mm circle */\n\n  if (r > 50) {\n    return 0;\n  } else {\n    return 1;\n  }\n}\n\nfunction userAbsorb4(q, chi) {\n  /* as a function of q,chi */\n\n  if (q > 0.1) {\n    return 0;\n  } else {\n    return 1;\n  }\n}\n"
userAbsorptionFunction=userAbsorption

[integrator]
oversample=1
integrationStep=0.001
integrationNSteps=0
integrationMinimum=0
integrationMaximum=100000
integrationXUnits=0
